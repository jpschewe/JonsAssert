<?xml version="1.0"?>
<!--DOCTYPE project PUBLIC "-//ANT//DTD project//EN" "file:///usr/src/ant/ant.dtd"-->

<project name="assert" default="compile" basedir=".">

  <property file="${user.home}/.ant.properties" />
  <property name="temp.dir"  value="${basedir}/tmp" />
  
  <property name="app.name"   value="JonsAssert" />
  <property name="instrument.dir"  value="instrumented" />

  <target name="init">
    <tstamp />
    <available property="assert.present" classname="net.mtu.eggplant.assert.JonsAssert" />
  </target>

  <path id="base.classpath">
    <pathelement location="${basedir}"/>
    <pathelement location="${basedir}/lib/JonsInfra-0.1.jar"/>
    <pathelement location="${basedir}/lib/antlr.jar"/>
    <pathelement location="${basedir}/lib/werken.opt.jar"/>
    <pathelement location="${basedir}/lib/junit-3.6.jar"/>
  </path>

  
  <target name="compile" depends="init">
    <java classname="antlr.Tool"
	  fork="yes"
	  failonerror="true"
	  taskname="antlr"
	  dir="${basedir}/src/net/mtu/eggplant/assert">
      <classpath>
  	<pathelement location="${basedir}/lib/antlr.jar" />
      </classpath>
      <arg value="java.g" />
    </java>

    <java classname="antlr.Tool"
	  fork="yes"
	  failonerror="true"
	  taskname="antlr"
	  dir="${basedir}/src/net/mtu/eggplant/assert">
      <classpath>
        <pathelement location="${basedir}/lib/antlr.jar" />
      </classpath>
      <arg value="assert.g" />
    </java>

    <javac srcdir="${basedir}/src" destdir="${basedir}/src">
      <classpath>
        <path refid="base.classpath"/>
      </classpath>
      <include name="net/**/*.java"/>
      <exclude name="net/mtu/eggplant/assert/testcases/**"/>
    </javac>
  </target>

  <target name="jar" depends="compile">
    <jar jarfile="${app.name}.jar"
	 basedir="${basedir}/src" includes="**" />
  </target>

  <target name="runtests" depends="compile">
    <java fork="yes" classname="junit.textui.TestRunner" 
	  taskname="junit" failonerror="true">
      <arg value="net.mtu.eggplant.assert.test.AllTests"/>
      <classpath>
        <path refid="base.classpath"/>
      </classpath>
    </java>
  </target>

  <target name="instrument" depends="init" if="assert.present">
    <java fork="yes"
	  classname="net.mtu.eggplant.assert.JonsAssert"
	  taskname="assert"
	  failonerror="true">
      <arg value="${basedir}/src/net" />
      <arg value="-d ${basedir}/${instrument.dir}" />
    </java>
  </target>

  <target name="compile-assert" depends="init,instrument">
    <java classname="antlr.Tool"
	  fork="yes"
	  failonerror="true"
	  taskname="antlr"
	  dir="${basedir}/src/net/mtu/eggplant/assert">
      <classpath>
  	<pathelement location="${basedir}/lib/antlr.jar" />
      </classpath>
      <arg value="java.g" />
    </java>

    <java classname="antlr.Tool"
	  fork="yes"
	  failonerror="true"
	  taskname="antlr"
	  dir="${basedir}/src/net/mtu/eggplant/assert">
      <classpath>
        <pathelement location="${basedir}/lib/antlr.jar" />
      </classpath>
      <arg value="assert.g" />
    </java>

    <javac srcdir="${instrument.dir}" destdir="${basedir}" >
      <classpath>
        <path refid="base.classpath"/>
      </classpath>
      <include name="net/**/*.java"/>
      <exclude name="net/mtu/eggplant/assert/testcases/**"/>
    </javac>
  </target>

  <target name="clean">
    <delete>
      <fileset dir="${basedir}/src">
  	<patternset>
  	  <include name="**/*.class" />
  	</patternset>
  	<patternset>
  	  <include name="net/mtu/eggplant/assert/AssertLexer.*" />
  	</patternset>
  	<patternset>
  	  <include name="net/mtu/eggplant/assert/AssertLexerTokenTypes.*" />
  	</patternset>
  	<patternset>
  	  <include name="net/mtu/eggplant/assert/JavaLexer.*" />
  	</patternset>
  	<patternset>
  	  <include name="net/mtu/eggplant/assert/JavaRecognizer.*" />
  	</patternset>
  	<patternset>
      	  <include name="net/mtu/eggplant/assert/JavaTokenTypes.*" />
  	</patternset>
      </fileset>
    </delete>
  </target>

  <!-- Javadoc targets below here -->

  <!-- tell javadoc where to find out doclet -->
  <property name="doclet.name" value="com.honeywell.htc.schedinfra.javadoc.Standard" />
  <property name="doclet.path" value="/home/jpschewe/projects/java/scripts/javadoc.jar" />
  
  <!-- used for releases -->
  <property name="release.home.html.dir" value="http://disk.mn.mtu.net/~jpschewe/mtu.net" />
  <!--<property name="home.html.dir" value="http://mtu.net/~jpschewe" />-->
  <property name="release.html.dir" value="/net/home-jpschewe/public_html/mtu.net/" />


  <!-- used for active_javadoc -->
  <property name="active.home.html.dir" value="http://disk.mnt.mtu.net/~jpschewe" />
  <property name="active.html.dir" value="/net/home-jpschewe/public_html/" />

  <target name="init_javadoc">
    <mkdir dir="${temp.dir}" />
  </target>
  
  
  <!-- 0.2 javadoc -->
  <target name="0.2_javadoc" depends="init_javadoc">
    <!-- get the source out of cvs -->
    <cvs cvsRoot="/home/CVS-Repository"
	 package="assert"
	 dest="${temp.dir}"
	 tag="JonsAssert-0_2" />
    <!-- run javadoc on the source -->
    <mkdir dir="${release.html.dir}/JonsAssert/0.2/api" />
    <javadoc packagenames="net.mtu.eggplant.*"
	     sourcepath="${temp.dir}/assert/src"
	     use="true"
	     splitindex="true"
	     version="true"
	     windowtitle="JonsAssert 0.2">
      <doclet name="${doclet.name}"
	      path="${doclet.path}">
	<param name="-d" value="${release.html.dir}/JonsAssert/0.2/api" />
      </doclet>
      <classpath>
	<pathelement location="${temp.dir}/assert/src/" />
	<pathelement location="${temp.dir}/assert/lib/junit.jar" />
	<pathelement location="${temp.dir}/assert/lib/JonsInfra-0.1.jar" />
	<pathelement location="${temp.dir}/assert/lib/antlr.jar" />
	<pathelement location="${temp.dir}/assert/lib/java-getopt-1.0.7.jar" />
      </classpath>
      <!-- core java -->
      <link href="http://java.sun.com/j2se/1.3/docs/api/" />
      <!-- infra -->
      <link href="${release.home.html.dir}/JonsInfra/0.1/api" />
      <!-- junit -->
      <link href="${release.home.html.dir}/java/junit-3.2/" />
      <!-- antlr -->
      <link href="${release.home.html.dir}/java/antlr/javadoc/" />
      <!-- gnu -->
      <link href="${release.home.html.dir}/java/gnu/" />
    </javadoc>
    
    <!-- delete the temp files -->
    <delete dir="${temp.dir}" />
  </target>
  
  
</project>