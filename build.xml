<?xml version="1.0"?>
<!DOCTYPE project PUBLIC "-//ANT//DTD project//EN" "project.dtd">

<project name="assert" default="compile" basedir=".">

  <property file="${user.home}/.ant.properties" />
  <property name="temp.dir"  value="${basedir}/tmp" />
  
  <property name="app.name"   value="JonsAssert-0.5" />
  <property name="instrument.dir"  value="instrumented" />

  <property name="cvs.root" value="disk:/export/CVS-Repository" />
  <property name="cvs.module" value="assert" />

  <!-- used for *.javadoc -->
  <property name="local.java.packages" value="http://disk.mn.mtu.net/package-docs/java" />
  <property name="local.java.projects" value="http://disk.mn.mtu.net/package-docs/projects" />
  <property name="nightly.html.dir" value="/net/package-docs/projects" />
  
  <target name="init">
    <tstamp />
    <uptodate property="buildJavaLexer" targetfile="${basedir}/src/net/mtu/eggplant/dbc/java.g">
      <srcfiles dir="${basedir}/src/net/mtu/eggplant/dbc" includes="JavaRecognizer.java" />
    </uptodate>
    <uptodate property="buildJava14Lexer" targetfile="${basedir}/src/net/mtu/eggplant/dbc/java14.g">
      <srcfiles dir="${basedir}/src/net/mtu/eggplant/dbc">
        <include name="Java14Recognizer.java" />
        <include name="java.g" />
      </srcfiles>
    </uptodate>
    <uptodate property="buildAssertLexer" targetfile="${basedir}/src/net/mtu/eggplant/dbc/assert.g">
      <srcfiles dir="${basedir}/src/net/mtu/eggplant/dbc" includes="AssertLexer.java" />
    </uptodate>
  </target>

  <path id="base.classpath">
    <pathelement location="${basedir}/lib/JonsInfra-0.1.jar"/>
    <pathelement location="${basedir}/lib/antlr.jar"/>
    <pathelement location="${basedir}/lib/werken.opt.jar"/>
    <pathelement location="${basedir}/lib/junit-3.7.jar"/>
  </path>

  <target name="antlrTasks" depends="init,buildJavaLexer,buildJava14Lexer,buildAssertLexer" />

  <target name="buildJavaLexer" if="buildJavaLexer">
    <java classname="antlr.Tool"
	  fork="yes"
	  failonerror="true"
	  taskname="antlr"
	  dir="${basedir}/src/net/mtu/eggplant/dbc">
      <classpath>
  	<pathelement location="${basedir}/lib/antlr.jar" />
      </classpath>
      <arg value="java.g" />
    </java>
  </target>

  <target name="buildJava14Lexer" if="buildJava14Lexer" depends="buildJavaLexer">
    <java classname="antlr.Tool"
	  fork="yes"
	  failonerror="true"
	  taskname="antlr"
	  dir="${basedir}/src/net/mtu/eggplant/dbc">
      <classpath>
  	<pathelement location="${basedir}/lib/antlr.jar" />
      </classpath>
      <arg line="-glib java.g" />
      <arg value="java14.g" />
    </java>
  </target>
  
  <target name="buildAssertLexer" if="buildAssertLexer">
    <java classname="antlr.Tool"
	  fork="yes"
	  failonerror="true"
	  taskname="antlr"
	  dir="${basedir}/src/net/mtu/eggplant/dbc">
      <classpath>
        <pathelement location="${basedir}/lib/antlr.jar" />
      </classpath>
      <arg value="assert.g" />
    </java>
  </target>
  
  <target name="compile" depends="init,antlrTasks">
  <!-- broken
  <target name="compile" depends="init">
    <antlr target="${basedir}/src/net/mtu/eggplant/dbc/java.g" />
    <antlr target="${basedir}/src/net/mtu/eggplant/dbc/java14.g" />
    <antlr target="${basedir}/src/net/mtu/eggplant/dbc/assert.g" />
    -->
    
    <javac srcdir="${basedir}/src"
	   destdir="${basedir}/src"
	   debug="true"
	   deprecation="true">
      <classpath>
        <path refid="base.classpath"/>
      </classpath>
      <include name="net/**/*.java"/>
      <exclude name="net/mtu/eggplant/dbc/testcases/**"/>
      <exclude name="net/mtu/eggplant/dbc/test14/**"/>
    </javac>
  </target>

  <target name="jar" depends="compile">
    <jar jarfile="${app.name}.jar"
	 basedir="${basedir}/src" includes="**" />
  </target>

  <target name="test" depends="compile">
    <echo message="Look at the output to determine if the tests passed, the build will always succeed" />
    <!-- first instrument the test files -->
    <java fork="no"
	  classname="net.mtu.eggplant.dbc.JonsAssert"
	  taskname="DBC"
	  failonerror="false"> <!-- so we can see what all needs fixing -->
      <arg value="-d ${basedir}/${instrument.dir}" />
      <arg value="-f" />
      <arg value="${basedir}/src/net/mtu/eggplant/dbc/testcases" />
      <classpath>
        <pathelement location="${basedir}/src"/>
        <path refid="base.classpath"/>
      </classpath>
    </java>

    <!-- instrument the 1.4 files -->
    <java fork="yes"
	  classname="net.mtu.eggplant.dbc.JonsAssert"
	  taskname="DBC"
	  failonerror="false"> <!-- so we can see what all needs fixing -->
      <arg value="-source 1.4" />
      <arg value="-d ${basedir}/${instrument.dir}" />
      <arg value="-f" />
      <arg value="${basedir}/src/net/mtu/eggplant/dbc/test14" />
      <classpath>
        <pathelement location="${basedir}/src"/>
        <path refid="base.classpath"/>
      </classpath>
    </java>

    <!-- compile newly instrumented files -->
    <javac srcdir="${basedir}/${instrument.dir}"
	   destdir="${basedir}/src"
	   debug="true"
	   deprecation="true">
      <classpath>
        <path refid="base.classpath"/>
      </classpath>
      <include name="**/*.java" />
      <!-- don't try and compile the 1.4 stuff -->
      <exclude name="net/mtu/eggplant/dbc/test/Test14Compatibility.java" />
      <!--<include name="DefaultPackage.java" />
      <include name="net/mtu/eggplant/dbc/test/**/*.java" />-->
    </javac>

    <!-- run tests -->
    <java fork="yes" classname="junit.textui.TestRunner" 
	  taskname="junit" failonerror="false">
      <sysproperty key="ASSERT_BEHAVIOR" value="EXCEPTION" />
      <arg value="net.mtu.eggplant.dbc.test.TestAssert"/>
      <classpath>
        <pathelement location="${basedir}/src"/>
        <path refid="base.classpath"/>
      </classpath>
    </java>

    <java fork="yes" classname="junit.textui.TestRunner" 
	  taskname="junit" failonerror="false">
      <sysproperty key="ASSERT_BEHAVIOR" value="EXCEPTION" />
      <sysproperty key="ENFORCE_INHERITED_CONDITIONS" value="FALSE" />
      <arg value="net.mtu.eggplant.dbc.test.TestEnforceInherited"/>
      <classpath>
        <pathelement location="${basedir}/src"/>
        <path refid="base.classpath"/>
      </classpath>
    </java>
  </target>

  <target name="instrument" depends="init" if="assert.present">
    <java fork="yes"
	  classname="net.mtu.eggplant.dbc.JonsAssert"
	  taskname="assert"
	  failonerror="true">
      <arg value="${basedir}/src/net" />
      <arg value="-d ${basedir}/${instrument.dir}" />
    </java>
  </target>

  <target name="compile-assert" depends="init,instrument">
    <java classname="antlr.Tool"
	  fork="yes"
	  failonerror="true"
	  taskname="antlr"
	  dir="${basedir}/src/net/mtu/eggplant/dbc">
      <classpath>
  	<pathelement location="${basedir}/lib/antlr.jar" />
      </classpath>
      <arg value="java.g" />
    </java>

    <java classname="antlr.Tool"
	  fork="yes"
	  failonerror="true"
	  taskname="antlr"
	  dir="${basedir}/src/net/mtu/eggplant/dbc">
      <classpath>
        <pathelement location="${basedir}/lib/antlr.jar" />
      </classpath>
      <arg value="assert.g" />
    </java>

    <javac srcdir="${instrument.dir}"
	   destdir="${basedir}/src"
	   debug="true"
	   deprecation="true">
      <classpath>
        <path refid="base.classpath"/>
      </classpath>
      <include name="net/**/*.java"/>
      <exclude name="net/mtu/eggplant/dbc/testcases/**"/>
    </javac>
  </target>

  <target name="clean">
    <delete>
      <fileset dir="${basedir}/src">
  	  <include name="**/*.class" />
  	  <include name="net/mtu/eggplant/dbc/AssertLexer.*" />
  	  <include name="net/mtu/eggplant/dbc/AssertLexerTokenTypes.*" />
  	  <include name="net/mtu/eggplant/dbc/JavaLexer.*" />
  	  <include name="net/mtu/eggplant/dbc/JavaRecognizer.*" />
      	  <include name="net/mtu/eggplant/dbc/JavaTokenTypes.*" />
  	  <include name="net/mtu/eggplant/dbc/Java14Recognizer.*" />
      	  <include name="net/mtu/eggplant/dbc/Java14RecognizerTokenTypes.*" />
      </fileset>
    </delete>
  </target>

  <!-- Javadoc targets below here -->

  <!-- tell javadoc where to find out doclet -->
  <!--<property name="doclet.name" value="com.honeywell.htc.schedinfra.javadoc.Standard" />
  <property name="doclet.path" value="/home/jpschewe/projects/java/scripts/javadoc.jar" />-->

  <property name="doclet.name" value="net.mtu.eggplant.doclet.Standard" />
  <property name="doclet.path" value="/home/jpschewe/projects/infra/src" />
  
  <!-- used for releases -->
  <property name="mtu.net" value="http://mtu.net/~jpschewe" />
  <property name="mtu.net.offline" value="/home/jpschewe/public_html/mtu.net/public_html" />

  <!-- used for active_javadoc -->
  <property name="active.home.html.dir" value="http://disk.mnt.mtu.net/~jpschewe" />
  <property name="active.html.dir" value="/home/public_html/" />

  <target name="init_javadoc">
    <mkdir dir="${temp.dir}" />
  </target>
  
  
  <!-- 0.2 javadoc -->
  <target name="0.2_javadoc" depends="init_javadoc">
    <!-- get the source out of cvs -->
    <cvs cvsRoot="/home/CVS-Repository"
	 package="assert"
	 dest="${temp.dir}"
	 tag="JonsAssert-0_2" />
    <!-- run javadoc on the source -->
    <mkdir dir="${mtu.net.offline}/JonsAssert/0.2/api" />
    <javadoc packagenames="net.mtu.eggplant.*"
	     sourcepath="${temp.dir}/assert/src"
	     use="true"
	     splitindex="true"
	     version="true"
	     windowtitle="JonsAssert 0.2"
	     destdir="${mtu.net.offline}/JonsAssert/0.2/api">
      <doclet name="${doclet.name}"
	      path="${doclet.path}">
      </doclet>
      <classpath>
	<pathelement location="${temp.dir}/assert/src/" />
	<pathelement location="${temp.dir}/assert/lib/junit.jar" />
	<pathelement location="${temp.dir}/assert/lib/JonsInfra-0.1.jar" />
	<pathelement location="${temp.dir}/assert/lib/antlr.jar" />
	<pathelement location="${temp.dir}/assert/lib/java-getopt-1.0.7.jar" />
      </classpath>
      <!-- core java -->
      <link href="http://java.sun.com/j2se/1.3/docs/api/" />
      <!-- infra -->
      <link offline="true" href="${mtu.net}/JonsInfra/0.1/api" packagelistLoc="${mtu.net.offline}/JonsInfra/0.1/api" />
      <!-- junit -->
      <link offline="true" href="${mtu.net}/java/junit/3.2" packagelistLoc="${mtu.net.offline}/java/junit/3.2" />
      <!-- antlr -->
      <link offline="true" href="${mtu.net}/java/antlr/2.6.0" packagelistLoc="${mtu.net.offline}/java/antlr/2.6.0" />
      <!-- gnu -->
      <link offline="true" href="${mtu.net}/java/gnu" packagelistLoc="${mtu.net.offline}/java/gnu" />
    </javadoc>
    
    <!-- delete the temp files -->
    <delete dir="${temp.dir}" />
  </target>
  
  <!-- 0.3 javadoc -->
  <target name="0.3_javadoc" depends="init_javadoc">
    <!-- get the source out of cvs -->
    <cvs cvsRoot="/home/CVS-Repository"
	 package="assert"
	 dest="${temp.dir}"
	 tag="JonsAssert-0_3" />
    <!-- run javadoc on the source -->
    <mkdir dir="${mtu.net.offline}/JonsAssert/0.3/api" />
    <javadoc packagenames="net.mtu.eggplant.*"
	     sourcepath="${temp.dir}/assert/src"
	     use="true"
	     splitindex="true"
	     version="true"
	     windowtitle="JonsAssert 0.3"
	     destdir="${mtu.net.offline}/JonsAssert/0.3/api" >
      <doclet name="${doclet.name}"
	      path="${doclet.path}">
      </doclet>
      <classpath>
	<pathelement location="${temp.dir}/assert/src/" />
	<pathelement location="${temp.dir}/assert/lib/junit-3.6.jar" />
	<pathelement location="${temp.dir}/assert/lib/JonsInfra-0.1.jar" />
	<pathelement location="${temp.dir}/assert/lib/antlr.jar" />
	<pathelement location="${temp.dir}/assert/lib/werken.opt.jar" />
      </classpath>
      <!-- core java -->
      <link href="http://java.sun.com/j2se/1.3/docs/api/" />
      <!-- infra -->
      <link offline="true" href="${mtu.net}/JonsInfra/0.1/api" packagelistLoc="${mtu.net.offline}/JonsInfra/0.1/api" />
      <!-- junit -->
      <link offline="true" href="${mtu.net}/java/junit/3.6" packagelistLoc="${mtu.net.offline}/java/junit/3.6" />
      <!-- antlr -->
      <link offline="true" href="${mtu.net}/java/antlr/2.6.0" packagelistLoc="${mtu.net.offline}/java/antlr/2.6.0" />
      <!-- werken.opt -->
      <link href="http://code.werken.com/werken.opt/build/apidocs/" />
    </javadoc>
    
    <!-- delete the temp files -->
    <delete dir="${temp.dir}" />
  </target>

  <!-- 0.5 javadoc -->
  <target name="0.5_javadoc" depends="init_javadoc">
    <!-- get the source out of cvs -->
    <cvs cvsRoot="/home/CVS-Repository"
	 package="assert"
	 dest="${temp.dir}"
	 tag="JonsAssert-0_5" />
    <!-- run javadoc on the source -->
    <mkdir dir="${mtu.net.offline}/JonsAssert/api" />
    <javadoc packagenames="net.mtu.eggplant.dbc"
	     sourcepath="${temp.dir}/assert/src"
	     use="true"
	     splitindex="true"
	     version="true"
	     windowtitle="JonsAssert 0.5"
	     destdir="${mtu.net.offline}/JonsAssert/api" >
      <doclet name="${doclet.name}"
	      path="${doclet.path}">
      </doclet>
      <classpath>
	<pathelement location="${temp.dir}/assert/src/" />
	<pathelement location="${temp.dir}/assert/lib/junit-3.7.jar" />
	<pathelement location="${temp.dir}/assert/lib/JonsInfra-0.1.jar" />
	<pathelement location="${temp.dir}/assert/lib/antlr.jar" />
	<pathelement location="${temp.dir}/assert/lib/werken.opt.jar" />
      </classpath>
      <!-- core java -->
      <link href="http://java.sun.com/j2se/1.3/docs/api/" />
      <!-- infra -->
      <link offline="true" href="${mtu.net}/JonsInfra/0.1/api" packagelistLoc="${mtu.net.offline}/JonsInfra/0.1/api" />
      <!-- junit -->
      <link offline="true" href="${mtu.net}/java/junit/3.7" packagelistLoc="${mtu.net.offline}/java/junit/3.7" />
      <!-- antlr -->
      <link offline="true" href="${mtu.net}/java/antlr/2.7.1" packagelistLoc="${mtu.net.offline}/java/antlr/2.7.1" />
      <!-- werken.opt -->
      <link href="http://code.werken.com/werken.opt/build/apidocs/" />
    </javadoc>
    
    <!-- delete the temp files -->
    <delete dir="${temp.dir}" />
  </target>

  <!-- do a nightly build to my fileserver -->
  <target name="nightly.javadoc">
    <mkdir dir="${temp.dir}" />    
    <!-- get the source out of cvs -->
    <cvs cvsRoot="${cvs.root}"
         package="${cvs.module}"
         dest="${temp.dir}"
         quiet="true" />

    <!-- build the lexers -->
    <antcall target="antlrTasks">
      <param name="basedir" value="${temp.dir}/assert" />
    </antcall>
      
    <!-- run javadoc on the source -->
    <mkdir dir="${nightly.html.dir}/JonsAssert" />
    <javadoc packagenames="net.mtu.eggplant.*"
             sourcepath="${temp.dir}/assert/src"
             use="true"
             splitindex="true"
             version="true"
             windowtitle="JonsAssert"
             destdir="${nightly.html.dir}/JonsAssert"
             source="1.4"
             additionalparam="-tag beaninfo:a:BeanInfo -tag test:a:Tests -tag pre:cm:PreConditions -tag post:cm:PostConditions -tag invariant:tc:Invariants -breakiterator"
             >
      <classpath>
        <path refid="base.classpath"/>
      </classpath>
      <!-- core java -->
      <link href="${local.java.packages}/jdk-1.4.0/api/"/>
      <!-- junit -->
      <link href="${local.java.packages}/junit-3.8/" />
      <!-- infra -->
      <link href="${local.java.projects}/JonsInfra/" />
    </javadoc>
    
    <!-- delete the temp files -->
    <delete dir="${temp.dir}" />
  </target>
  
</project>